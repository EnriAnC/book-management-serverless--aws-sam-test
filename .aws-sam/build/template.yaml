AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'lambda-nodejs20.x

  Sample SAM Template for lambda-nodejs20.x

  '
Resources:
  RoleAppSyncLambda:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: allow-access-to-lambda-from-appsync
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: lambda:InvokeFunction
            Resource:
            - Fn::GetAtt:
              - GetBooksSortByGenderFunction
              - Arn
  RoleAppSyncDynamoDB:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${APIName}-dynamodb-policy
      ManagedPolicyArns:
      - Ref: PolicyDynamoDB
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - sts:AssumeRole
          Principal:
            Service:
            - appsync.amazonaws.com
  PolicyDynamoDB:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Path: /appsync/
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:DeleteItem
          - dynamodb:Query
          - dynamodb:Scan
          Resource:
          - Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${BookManagementTable}
  BMUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: BMUserPool
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      UsernameAttributes:
      - email
      AutoVerifiedAttributes:
      - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: false
          RequireNumbers: false
          RequireSymbols: false
          RequireUppercase: false
  BMUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: BMAppClient
      UserPoolId:
        Ref: BMUserPool
      GenerateSecret: false
      RefreshTokenValidity: 30
  GetBooksFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Get all books
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: GetBooksFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: GetBooksFunction
  GetBookDetailsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Get book details
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: GetBookDetailsFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: GetBookDetailsFunction
  DeleteBooksFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Delete books
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: DeleteBooksFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: DeleteBooksFunction
  GetBooksSortByGenderFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Get books order by gender
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: GetBooksSortByGenderFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: GetBooksSortByGenderFunction
  GetAuthorsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Get all Authors
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: GetAuthorsFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: GetAuthorsFunction
  GetAuthorDetailsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Get Author details
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: GetAuthorDetailsFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: GetAuthorDetailsFunction
  DeleteAuthorsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Delete authors
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: DeleteAuthorsFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: DeleteAuthorsFunction
  GetGenresFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Get all Genres
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: GetGenresFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: GetGenresFunction
  GetGenreDetailsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Get Genre details
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: GetGenreDetailsFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: GetGenreDetailsFunction
  DeleteGenresFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Delete Genres
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: DeleteGenresFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: DeleteGenresFunction
  BMGraphQLAPI:
    Type: AWS::Serverless::GraphQLApi
    Properties:
      SchemaUri: ..\..\schema.graphql
      Auth:
        Type: AMAZON_COGNITO_USER_POOLS
        UserPool:
          UserPoolId:
            Fn::GetAtt:
            - BMUserPool
            - UserPoolId
          AwsRegion:
            Fn::Sub: ${AWS::Region}
          DefaultAction: ALLOW
      ApiKeys:
        BMApiKey:
          Description: BM api key
      DataSources:
        DynamoDb:
          BMDataSource:
            TableName:
              Ref: BookManagementTable
            TableArn:
              Fn::GetAtt:
              - BookManagementTable
              - Arn
        Lambda:
          GetBooksAndGendersDataSource:
            FunctionArn:
              Fn::GetAtt:
              - GetBooksSortByGenderFunction
              - Arn
          GetBooksDataSource:
            FunctionArn:
              Fn::GetAtt:
              - GetBooksFunction
              - Arn
          GetBookDetailsDataSource:
            FunctionArn:
              Fn::GetAtt:
              - GetBookDetailsFunction
              - Arn
          DeleteBooksDataSource:
            FunctionArn:
              Fn::GetAtt:
              - DeleteBooksFunction
              - Arn
          GetAuthorsDataSource:
            FunctionArn:
              Fn::GetAtt:
              - GetAuthorsFunction
              - Arn
          GetAuthorDetailsDataSource:
            FunctionArn:
              Fn::GetAtt:
              - GetAuthorDetailsFunction
              - Arn
          DeleteAuthorsDataSource:
            FunctionArn:
              Fn::GetAtt:
              - DeleteAuthorsFunction
              - Arn
          GetGenresDataSource:
            FunctionArn:
              Fn::GetAtt:
              - GetGenresFunction
              - Arn
          GetGenreDetailsDataSource:
            FunctionArn:
              Fn::GetAtt:
              - GetGenreDetailsFunction
              - Arn
          DeleteGenresDataSource:
            FunctionArn:
              Fn::GetAtt:
              - DeleteGenresFunction
              - Arn
      Functions:
        listAuthorsInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: GetAuthorsDataSource
          CodeUri: ..\..\gql\invoker.js
        getAuthorInfo:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: GetAuthorDetailsDataSource
          CodeUri: ..\..\gql\invoker.js
        putAuthorInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: BMDataSource
          CodeUri: ..\..\resolvers\build\putAuthor.js
        deleteAuthorInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: DeleteAuthorsDataSource
          CodeUri: ..\..\gql\invoker.js
        listBooksInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: GetBooksDataSource
          CodeUri: ..\..\gql\invoker.js
        getBookInfo:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: GetBookDetailsDataSource
          CodeUri: ..\..\gql\invoker.js
        putBookInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: BMDataSource
          CodeUri: ..\..\resolvers\build\putBook.js
        deleteBookInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: DeleteBooksDataSource
          CodeUri: ..\..\gql\invoker.js
        deleteBookRelationsInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: BMDataSource
          CodeUri: ..\..\resolvers\build\deleteBookRelations.js
        listGenresInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: GetGenresDataSource
          CodeUri: ..\..\gql\invoker.js
        getGenreInfo:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: GetGenreDetailsDataSource
          CodeUri: ..\..\gql\invoker.js
        putGenreInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: BMDataSource
          CodeUri: ..\..\resolvers\build\putGenre.js
        deleteGenreInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: DeleteGenresDataSource
          CodeUri: ..\..\gql\invoker.js
        deleteGenreRelationsInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: BMDataSource
          CodeUri: ..\..\resolvers\build\deleteGenreRelations.js
        getAuthorBooksInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: BMDataSource
          CodeUri: ..\..\resolvers\build\getAuthorBooks.js
        getAuthorBooksMetadataInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: BMDataSource
          CodeUri: ..\..\resolvers\build\getAuthorBooksMetadata.js
        lambdaInvoker:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: GetBooksAndGendersDataSource
          CodeUri: ..\..\gql\invoker.js
      Resolvers:
        Query:
          getAuthor:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - getAuthorInfo
          listAuthors:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - listAuthorsInTable
          getBook:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - getBookInfo
          listBooks:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - listBooksInTable
          getGenre:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - getGenreInfo
          listGenres:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - listGenresInTable
          getAuthorAndBooks:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - getAuthorBooksInTable
            - getAuthorBooksMetadataInTable
          listBooksSortByGenders:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - lambdaInvoker
        Mutation:
          putAuthor:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - putAuthorInTable
          deleteAuthors:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - deleteAuthorInTable
          putBook:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - putBookInTable
          deleteBooks:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - deleteBookInTable
          putGenre:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - putGenreInTable
          deleteGenres:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - deleteGenreInTable
  BookManagementTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: BookManagementTable
      KeySchema:
      - AttributeName: PK
        KeyType: HASH
      - AttributeName: SK
        KeyType: RANGE
      AttributeDefinitions:
      - AttributeName: PK
        AttributeType: S
      - AttributeName: SK
        AttributeType: S
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
      - IndexName: InverseIndex
        KeySchema:
        - AttributeName: SK
          KeyType: HASH
        - AttributeName: PK
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
Parameters:
  APIName:
    Type: String
    Default: bm-epac-api
Outputs:
  BMGraphQLAPI:
    Description: AppSync API
    Value:
      Fn::GetAtt:
      - BMGraphQLAPI
      - GraphQLUrl
  BMGraphQLAPIBMApiKey:
    Description: AppSync API Key
    Value:
      Fn::GetAtt:
      - BMGraphQLAPIBMApiKey
      - ApiKey
  UserPoolId:
    Description: User Pool ID
    Value:
      Ref: BMUserPool
  UserPoolClientId:
    Description: User Pool Client ID
    Value:
      Ref: BMUserPoolClient
  Region:
    Description: AWS Region
    Value:
      Ref: AWS::Region
  AccountId:
    Description: AWS Account ID
    Value:
      Ref: AWS::AccountId
