AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'lambda-nodejs20.x

  Sample SAM Template for lambda-nodejs20.x

  '
Resources:
  RoleAppSyncDynamoDB:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${APIName}-dynamodb-policy
      ManagedPolicyArns:
      - Ref: PolicyDynamoDB
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - sts:AssumeRole
          Principal:
            Service:
            - appsync.amazonaws.com
  PolicyDynamoDB:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Path: /appsync/
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:DeleteItem
          - dynamodb:Query
          - dynamodb:Scan
          Resource:
          - Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${BookManagementTable}
  StepFunctionsResolverExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - appsync.amazonaws.com
            - states.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: StepFunctionsExecutionPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - states:StartSyncExecution
            Resource:
            - Ref: SaveBookStateMachine
  StateMachineLambdaInvokeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: states.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: InvokeLambdaPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: lambda:InvokeFunction
            Resource:
            - Fn::GetAtt:
              - PutBookFunction
              - Arn
            - Fn::GetAtt:
              - AuditFunction
              - Arn
  BMUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: BMUserPool
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      UsernameAttributes:
      - email
      AutoVerifiedAttributes:
      - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: false
          RequireNumbers: false
          RequireSymbols: false
          RequireUppercase: false
  BMUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: BMAppClient
      UserPoolId:
        Ref: BMUserPool
      GenerateSecret: false
      RefreshTokenValidity: 30
  StepFunctionDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - BMGraphQLAPI
        - ApiId
      Name: StepFunctionDataSource
      Type: HTTP
      HttpConfig:
        Endpoint:
          Fn::Sub: https://sync-states.${AWS::Region}.amazonaws.com
        AuthorizationConfig:
          AuthorizationType: AWS_IAM
          AwsIamConfig:
            SigningRegion:
              Ref: AWS::Region
            SigningServiceName: states
      ServiceRoleArn:
        Fn::GetAtt:
        - StepFunctionsResolverExecutionRole
        - Arn
  SaveBookStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: EXPRESS
      DefinitionUri: ..\..\statemachines\create-book.asl.json
      DefinitionSubstitutions:
        PutBookFunctionArn:
          Fn::GetAtt:
          - PutBookFunction
          - Arn
        AuditFunctionArn:
          Fn::GetAtt:
          - AuditFunction
          - Arn
      Role:
        Fn::GetAtt:
        - StateMachineLambdaInvokeRole
        - Arn
  GetBooksFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Get all books
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: GetBooksFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: GetBooksFunction
  GetBookDetailsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Get book details
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: GetBookDetailsFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: GetBookDetailsFunction
  PutBookFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Put book
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: PutBookFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: PutBookFunction
  RewriteGenreBookRelationsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Rewrite genre book relations
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: RewriteGenreBookRelationsFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: RewriteGenreBookRelationsFunction
  CreateGenreBookRelationsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Create genre book relations
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: CreateGenreBookRelationsFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: CreateGenreBookRelationsFunction
  DeleteBooksFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Delete books
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: DeleteBooksFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: DeleteBooksFunction
  DeleteGenreBookRelationsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Delete genre book relations
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: DeleteGenreBookRelationsFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: DeleteGenreBookRelationsFunction
  GetBooksSortByGenderFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Get books order by gender
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: GetBooksSortByGenderFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: GetBooksSortByGenderFunction
  GetAuthorsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Get all Authors
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: GetAuthorsFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: GetAuthorsFunction
  GetAuthorDetailsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Get Author details
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: GetAuthorDetailsFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: GetAuthorDetailsFunction
  PutAuthorFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Put Author
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: PutAuthorFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: PutAuthorFunction
  DeleteAuthorsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Delete authors
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: DeleteAuthorsFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: DeleteAuthorsFunction
  GetGenresFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Get all Genres
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: GetGenresFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: GetGenresFunction
  GetGenreDetailsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Get Genre details
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: GetGenreDetailsFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: GetGenreDetailsFunction
  PutGenreFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Put Genre
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: PutGenreFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: PutGenreFunction
  DeleteGenresFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Delete Genres
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: DeleteGenresFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: DeleteGenresFunction
  AuditFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Audit function
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: AuditFunction
      Timeout: 10
      MemorySize: 128
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BookManagementTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BookManagementTable
          REGION:
            Ref: AWS::Region
    Metadata:
      SamResourceId: AuditFunction
  SaveBookResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - BMGraphQLAPI
        - ApiId
      TypeName: Mutation
      FieldName: saveBook
      DataSourceName:
        Fn::GetAtt:
        - StepFunctionDataSource
        - Name
      Code: "import { util } from '@aws-appsync/utils';\nexport function request(ctx)\
        \ {\n    return {\n        \"version\": \"2018-05-29\",\n        \"method\"\
        : \"POST\",\n        \"resourcePath\": \"/\",\n        \"params\": {\n   \
        \         \"headers\": {\n                \"Content-Type\": \"application/x-amz-json-1.0\"\
        ,\n                \"x-amz-target\": \"AWSStepFunctions.StartSyncExecution\"\
        \n            },\n            \"body\": {\n                \"stateMachineArn\"\
        : ctx.env.SaveBookStateMachineArn,\n                \"input\": JSON.stringify({\n\
        \                    field: ctx.info.fieldName,\n                    arguments:\
        \ ctx.args,\n                    source: ctx.source,\n                   \
        \ identity: ctx.identity\n                })\n            }\n        }\n \
        \   }\n}\n\nexport function response(ctx) {\n    const { error, result } =\
        \ ctx;\n    if (error) {\n        return util.appendError(error.message, error.type,\
        \ result);\n    }\n    return ctx.result;\n}\n"
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0
  BMGraphQLAPI:
    Type: AWS::Serverless::GraphQLApi
    Properties:
      SchemaUri: ..\..\schema.graphql
      Auth:
        Type: AMAZON_COGNITO_USER_POOLS
        UserPool:
          UserPoolId:
            Fn::GetAtt:
            - BMUserPool
            - UserPoolId
          AwsRegion:
            Fn::Sub: ${AWS::Region}
          DefaultAction: ALLOW
      ApiKeys:
        BMApiKey:
          Description: BM api key
      EnvironmentVariables:
        SaveBookStateMachineArn:
          Fn::GetAtt:
          - SaveBookStateMachine
          - Arn
      DataSources:
        DynamoDb:
          BMDataSource:
            TableName:
              Ref: BookManagementTable
            TableArn:
              Fn::GetAtt:
              - BookManagementTable
              - Arn
        Lambda:
          GetBooksAndGendersDataSource:
            FunctionArn:
              Fn::GetAtt:
              - GetBooksSortByGenderFunction
              - Arn
          GetBooksDataSource:
            FunctionArn:
              Fn::GetAtt:
              - GetBooksFunction
              - Arn
          GetBookDetailsDataSource:
            FunctionArn:
              Fn::GetAtt:
              - GetBookDetailsFunction
              - Arn
          PutBookDataSource:
            FunctionArn:
              Fn::GetAtt:
              - PutBookFunction
              - Arn
          CreateGenreBookRelationsDataSource:
            FunctionArn:
              Fn::GetAtt:
              - CreateGenreBookRelationsFunction
              - Arn
          RewriteGenreBookRelationsDataSource:
            FunctionArn:
              Fn::GetAtt:
              - RewriteGenreBookRelationsFunction
              - Arn
          DeleteBooksDataSource:
            FunctionArn:
              Fn::GetAtt:
              - DeleteBooksFunction
              - Arn
          DeleteGenreBookRelationsDataSource:
            FunctionArn:
              Fn::GetAtt:
              - DeleteGenreBookRelationsFunction
              - Arn
          GetAuthorsDataSource:
            FunctionArn:
              Fn::GetAtt:
              - GetAuthorsFunction
              - Arn
          GetAuthorDetailsDataSource:
            FunctionArn:
              Fn::GetAtt:
              - GetAuthorDetailsFunction
              - Arn
          PutAuthorDataSource:
            FunctionArn:
              Fn::GetAtt:
              - PutAuthorFunction
              - Arn
          DeleteAuthorsDataSource:
            FunctionArn:
              Fn::GetAtt:
              - DeleteAuthorsFunction
              - Arn
          GetGenresDataSource:
            FunctionArn:
              Fn::GetAtt:
              - GetGenresFunction
              - Arn
          GetGenreDetailsDataSource:
            FunctionArn:
              Fn::GetAtt:
              - GetGenreDetailsFunction
              - Arn
          PutGenreDataSource:
            FunctionArn:
              Fn::GetAtt:
              - PutGenreFunction
              - Arn
          DeleteGenresDataSource:
            FunctionArn:
              Fn::GetAtt:
              - DeleteGenresFunction
              - Arn
      Functions:
        listAuthorsInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: GetAuthorsDataSource
          CodeUri: ..\..\resolvers\build\invoker.js
        getAuthorInfo:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: GetAuthorDetailsDataSource
          CodeUri: ..\..\resolvers\build\invoker.js
        putAuthorInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: PutAuthorDataSource
          CodeUri: ..\..\resolvers\build\invoker.js
        deleteAuthorInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: DeleteAuthorsDataSource
          CodeUri: ..\..\resolvers\build\invoker.js
        listBooksInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: GetBooksDataSource
          CodeUri: ..\..\resolvers\build\invoker.js
        getBookInfo:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: GetBookDetailsDataSource
          CodeUri: ..\..\resolvers\build\invoker.js
        putBookInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: PutBookDataSource
          CodeUri: ..\..\resolvers\build\invoker.js
        rewriteGenreBookRelationsInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: RewriteGenreBookRelationsDataSource
          CodeUri: ..\..\resolvers\build\invoker.js
        createGenreBookRelationsInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: CreateGenreBookRelationsDataSource
          CodeUri: ..\..\resolvers\build\invoker.js
        deleteBookInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: DeleteBooksDataSource
          CodeUri: ..\..\resolvers\build\invoker.js
        deleteGenreBookRelationsInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: DeleteGenreBookRelationsDataSource
          CodeUri: ..\..\resolvers\build\invoker.js
        listGenresInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: GetGenresDataSource
          CodeUri: ..\..\resolvers\build\invoker.js
        getGenreInfo:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: GetGenreDetailsDataSource
          CodeUri: ..\..\resolvers\build\invoker.js
        putGenreInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: PutGenreDataSource
          CodeUri: ..\..\resolvers\build\invoker.js
        deleteGenreInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: DeleteGenresDataSource
          CodeUri: ..\..\resolvers\build\invoker.js
        deleteGenreRelationsInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: BMDataSource
          CodeUri: ..\..\resolvers\build\deleteGenreRelations.js
        getAuthorBooksInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: BMDataSource
          CodeUri: ..\..\resolvers\build\getAuthorBooks.js
        getAuthorBooksMetadataInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: BMDataSource
          CodeUri: ..\..\resolvers\build\getAuthorBooksMetadata.js
      Resolvers:
        Query:
          getAuthor:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - getAuthorInfo
          listAuthors:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - listAuthorsInTable
          getBook:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - getBookInfo
          listBooks:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - listBooksInTable
          getGenre:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - getGenreInfo
          listGenres:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - listGenresInTable
          getAuthorAndBooks:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - getAuthorBooksInTable
            - getAuthorBooksMetadataInTable
        Mutation:
          putAuthor:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - putAuthorInTable
          deleteAuthors:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - deleteAuthorInTable
          putBook:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - putBookInTable
          rewriteGenreBookRelations:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - rewriteGenreBookRelationsInTable
          createGenreBookRelations:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - createGenreBookRelationsInTable
          deleteBooks:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - deleteBookInTable
          deleteGenreBookRelations:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - deleteGenreBookRelationsInTable
          putGenre:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - putGenreInTable
          deleteGenres:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
            - deleteGenreInTable
  BookManagementTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: BookManagementTable
      KeySchema:
      - AttributeName: PK
        KeyType: HASH
      - AttributeName: SK
        KeyType: RANGE
      AttributeDefinitions:
      - AttributeName: PK
        AttributeType: S
      - AttributeName: SK
        AttributeType: S
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
      - IndexName: InverseIndex
        KeySchema:
        - AttributeName: SK
          KeyType: HASH
        - AttributeName: PK
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
Parameters:
  APIName:
    Type: String
    Default: bm-epac-api
Outputs:
  BMGraphQLAPI:
    Description: AppSync API
    Value:
      Fn::GetAtt:
      - BMGraphQLAPI
      - GraphQLUrl
  BMGraphQLAPIBMApiKey:
    Description: AppSync API Key
    Value:
      Fn::GetAtt:
      - BMGraphQLAPIBMApiKey
      - ApiKey
  UserPoolId:
    Description: User Pool ID
    Value:
      Ref: BMUserPool
  UserPoolClientId:
    Description: User Pool Client ID
    Value:
      Ref: BMUserPoolClient
  Region:
    Description: AWS Region
    Value:
      Ref: AWS::Region
  AccountId:
    Description: AWS Account ID
    Value:
      Ref: AWS::AccountId
