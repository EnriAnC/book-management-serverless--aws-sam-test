AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: |
  book management serverless application

Resources:
  #Roles

  RoleAppSyncDynamoDB:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${APIName}-dynamodb-policy
      ManagedPolicyArns:
        - !Ref PolicyDynamoDB
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - appsync.amazonaws.com

  PolicyDynamoDB:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Path: /appsync/
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:DeleteItem
              - dynamodb:Query
              - dynamodb:Scan
            Resource:
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${BookManagementTable}

  StepFunctionsResolverExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - appsync.amazonaws.com
                - states.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: StepFunctionsExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - states:StartSyncExecution
                Resource:
                  - !Ref SaveBookStateMachine

  StateMachineLambdaInvokeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: InvokeLambdaPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: lambda:InvokeFunction
                Resource:
                  - !GetAtt PutBookFunction.Arn
                  - !GetAtt AuditFunction.Arn



  BMUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: BMUserPool
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: false
          RequireNumbers: false
          RequireSymbols: false
          RequireUppercase: false

  BMUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: BMAppClient
      UserPoolId: !Ref BMUserPool
      GenerateSecret: false
      RefreshTokenValidity: 30

  # STEP FUNCTIONS-----------------------------------------------------------------------------------------------------------

  StepFunctionDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: !GetAtt BMGraphQLAPI.ApiId
      Name: StepFunctionDataSource
      Type: HTTP
      HttpConfig:
        Endpoint: !Sub https://sync-states.${AWS::Region}.amazonaws.com
        AuthorizationConfig:
          AuthorizationType: AWS_IAM
          AwsIamConfig:
            SigningRegion: !Ref AWS::Region
            SigningServiceName: states
      ServiceRoleArn: !GetAtt StepFunctionsResolverExecutionRole.Arn

  SaveBookStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: EXPRESS
      DefinitionUri: statemachines/create-book.asl.json
      DefinitionSubstitutions:
        PutBookFunctionArn: !GetAtt PutBookFunction.Arn
        AuditFunctionArn: !GetAtt AuditFunction.Arn
      Role: !GetAtt StateMachineLambdaInvokeRole.Arn

  # FUNCTIONS----------------------------------------------------------------------------------------------------------------
  GetBooksFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Get all books
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: functions/getBooks/build
      Timeout: 10
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BookManagementTable
      Environment:
        Variables:
          TABLE_NAME: !Ref BookManagementTable
          REGION: !Ref AWS::Region

  GetBookDetailsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Get book details
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: functions/getBookDetails/build
      Timeout: 10
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BookManagementTable
      Environment:
        Variables:
          TABLE_NAME: !Ref BookManagementTable
          REGION: !Ref AWS::Region

  PutBookFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Put book
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: functions/putBook/build
      Timeout: 10
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BookManagementTable
      Environment:
        Variables:
          TABLE_NAME: !Ref BookManagementTable
          REGION: !Ref AWS::Region

  RewriteGenreBookRelationsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Rewrite genre book relations
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: functions/rewriteGenreBookRelations/build
      Timeout: 10
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BookManagementTable
      Environment:
        Variables:
          TABLE_NAME: !Ref BookManagementTable
          REGION: !Ref AWS::Region

  CreateGenreBookRelationsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Create genre book relations
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: functions/createGenreBookRelations/build
      Timeout: 10
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BookManagementTable
      Environment:
        Variables:
          TABLE_NAME: !Ref BookManagementTable
          REGION: !Ref AWS::Region

  DeleteBooksFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Delete books
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: functions/deleteBooks/build
      Timeout: 10
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BookManagementTable
      Environment:
        Variables:
          TABLE_NAME: !Ref BookManagementTable
          REGION: !Ref AWS::Region

  DeleteGenreBookRelationsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Delete genre book relations
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: functions/deleteGenreBookRelations/build
      Timeout: 10
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BookManagementTable
      Environment:
        Variables:
          TABLE_NAME: !Ref BookManagementTable
          REGION: !Ref AWS::Region

  GetAuthorsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Get all Authors
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: functions/getAuthors/build
      Timeout: 10
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BookManagementTable
      Environment:
        Variables:
          TABLE_NAME: !Ref BookManagementTable
          REGION: !Ref AWS::Region

  GetAuthorDetailsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Get Author details
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: functions/getAuthorDetails/build
      Timeout: 10
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BookManagementTable
      Environment:
        Variables:
          TABLE_NAME: !Ref BookManagementTable
          REGION: !Ref AWS::Region

  PutAuthorFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Put Author
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: functions/putAuthor/build
      Timeout: 10
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BookManagementTable
      Environment:
        Variables:
          TABLE_NAME: !Ref BookManagementTable
          REGION: !Ref AWS::Region

  DeleteAuthorsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Delete authors
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: functions/deleteAuthors/build
      Timeout: 10
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BookManagementTable
      Environment:
        Variables:
          TABLE_NAME: !Ref BookManagementTable
          REGION: !Ref AWS::Region

  GetGenresFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Get all Genres
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: functions/getGenres/build
      Timeout: 10
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BookManagementTable
      Environment:
        Variables:
          TABLE_NAME: !Ref BookManagementTable
          REGION: !Ref AWS::Region

  GetGenreDetailsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Get Genre details
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: functions/getGenreDetails/build
      Timeout: 10
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BookManagementTable
      Environment:
        Variables:
          TABLE_NAME: !Ref BookManagementTable
          REGION: !Ref AWS::Region

  PutGenreFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Put Genre
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: functions/putGenre/build
      Timeout: 10
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BookManagementTable
      Environment:
        Variables:
          TABLE_NAME: !Ref BookManagementTable
          REGION: !Ref AWS::Region

  DeleteGenresFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Delete Genres
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: functions/deleteGenres/build
      Timeout: 10
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BookManagementTable
      Environment:
        Variables:
          TABLE_NAME: !Ref BookManagementTable
          REGION: !Ref AWS::Region

  AuditFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Audit function
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: functions/audit/build
      Timeout: 10
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BookManagementTable
      Environment:
        Variables:
          TABLE_NAME: !Ref BookManagementTable
          REGION: !Ref AWS::Region

  # RESOLVERS----------------------------------------------------------------------------------------------------------------
  SaveBookResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !GetAtt BMGraphQLAPI.ApiId
      TypeName: Mutation
      FieldName: saveBook
      DataSourceName: !GetAtt StepFunctionDataSource.Name
      Code: |
        import { util } from '@aws-appsync/utils';
        export function request(ctx) {
          return {
            "version": "2018-05-29",
            "method": "POST",
            "resourcePath": "/",
            "params": {
              "headers": {
                "Content-Type": "application/x-amz-json-1.0",
                "x-amz-target": "AWSStepFunctions.StartSyncExecution"
              },
              "body": {
                "stateMachineArn": ctx.env.SaveBookStateMachineArn,
                "input": JSON.stringify({
                  field: ctx.info.fieldName,
                  arguments: ctx.args,
                  source: ctx.source,
                  identity: ctx.identity
                })
              }
            }
          }
        }
    
        export function response(ctx) {
          const { error, result } = ctx;
          if (error) {
            return util.appendError(error.message, error.type, result);
          }
          return ctx.result;
        }
      Runtime:
          Name: APPSYNC_JS
          RuntimeVersion: 1.0.0

  # END FUNCTIONS----------------------------------------------------------------------------------------------------------------

  BMGraphQLAPI:
    Type: AWS::Serverless::GraphQLApi
    Properties:
      SchemaUri: schema.graphql
      Auth:
        Type: AMAZON_COGNITO_USER_POOLS
        UserPool:
          UserPoolId: !GetAtt BMUserPool.UserPoolId
          AwsRegion: !Sub ${AWS::Region}
          DefaultAction: ALLOW
      ApiKeys:
        BMApiKey:
          Description: BM api key
      EnvironmentVariables:
        SaveBookStateMachineArn: !GetAtt SaveBookStateMachine.Arn
      DataSources:
        DynamoDb:
          BMDataSource:
            TableName: !Ref BookManagementTable
            TableArn: !GetAtt BookManagementTable.Arn
        Lambda:
          GetBooksDataSource:
            FunctionArn: !GetAtt GetBooksFunction.Arn
          GetBookDetailsDataSource:
            FunctionArn: !GetAtt GetBookDetailsFunction.Arn
          PutBookDataSource:
            FunctionArn: !GetAtt PutBookFunction.Arn
          CreateGenreBookRelationsDataSource:
            FunctionArn: !GetAtt CreateGenreBookRelationsFunction.Arn
          RewriteGenreBookRelationsDataSource:
            FunctionArn: !GetAtt RewriteGenreBookRelationsFunction.Arn
          DeleteBooksDataSource:
            FunctionArn: !GetAtt DeleteBooksFunction.Arn
          DeleteGenreBookRelationsDataSource:
            FunctionArn: !GetAtt DeleteGenreBookRelationsFunction.Arn
          GetAuthorsDataSource:
            FunctionArn: !GetAtt GetAuthorsFunction.Arn
          GetAuthorDetailsDataSource:
            FunctionArn: !GetAtt GetAuthorDetailsFunction.Arn
          PutAuthorDataSource:
            FunctionArn: !GetAtt PutAuthorFunction.Arn
          DeleteAuthorsDataSource:
            FunctionArn: !GetAtt DeleteAuthorsFunction.Arn
          GetGenresDataSource:
            FunctionArn: !GetAtt GetGenresFunction.Arn
          GetGenreDetailsDataSource:
            FunctionArn: !GetAtt GetGenreDetailsFunction.Arn
          PutGenreDataSource:
            FunctionArn: !GetAtt PutGenreFunction.Arn
          DeleteGenresDataSource:
            FunctionArn: !GetAtt DeleteGenresFunction.Arn
      Functions:
        # Author
        listAuthorsInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: GetAuthorsDataSource
          CodeUri: resolvers/build/invoker.js
        getAuthorInfo:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: GetAuthorDetailsDataSource
          CodeUri: resolvers/build/invoker.js
        putAuthorInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: PutAuthorDataSource
          CodeUri: resolvers/build/invoker.js
        deleteAuthorInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: DeleteAuthorsDataSource
          CodeUri: resolvers/build/invoker.js

        # Book
        listBooksInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: GetBooksDataSource
          CodeUri: resolvers/build/invoker.js
        getBookInfo:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: GetBookDetailsDataSource
          CodeUri: resolvers/build/invoker.js
        putBookInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: PutBookDataSource
          CodeUri: resolvers/build/invoker.js
        rewriteGenreBookRelationsInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: RewriteGenreBookRelationsDataSource
          CodeUri: resolvers/build/invoker.js
        createGenreBookRelationsInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: CreateGenreBookRelationsDataSource
          CodeUri: resolvers/build/invoker.js
        deleteBookInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: DeleteBooksDataSource
          CodeUri: resolvers/build/invoker.js
        deleteGenreBookRelationsInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: DeleteGenreBookRelationsDataSource
          CodeUri: resolvers/build/invoker.js

        # Genre
        listGenresInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: GetGenresDataSource
          CodeUri: resolvers/build/invoker.js
        getGenreInfo:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: GetGenreDetailsDataSource
          CodeUri: resolvers/build/invoker.js
        putGenreInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: PutGenreDataSource
          CodeUri: resolvers/build/invoker.js
        deleteGenreInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: DeleteGenresDataSource
          CodeUri: resolvers/build/invoker.js
        deleteGenreRelationsInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: BMDataSource
          CodeUri: resolvers/build/deleteGenreRelations.js

        # Author and Books
        getAuthorBooksInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: BMDataSource
          CodeUri: resolvers/build/getAuthorBooks.js

        getAuthorBooksMetadataInTable:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: BMDataSource
          CodeUri: resolvers/build/getAuthorBooksMetadata.js

      Resolvers:
        Query:
          # Author
          getAuthor:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
              - getAuthorInfo
          listAuthors:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
              - listAuthorsInTable

          # Book
          getBook:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
              - getBookInfo
          listBooks:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
              - listBooksInTable

          # Author
          getGenre:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
              - getGenreInfo
          listGenres:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
              - listGenresInTable

          # Author and Books
          getAuthorAndBooks:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
              - getAuthorBooksInTable
              - getAuthorBooksMetadataInTable

        Mutation:
          # Author
          putAuthor:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
              - putAuthorInTable
          deleteAuthors:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
              - deleteAuthorInTable

          # Book
          putBook:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
              - putBookInTable
          rewriteGenreBookRelations:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
              - rewriteGenreBookRelationsInTable
          createGenreBookRelations:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
              - createGenreBookRelationsInTable
          deleteBooks:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
              - deleteBookInTable
          deleteGenreBookRelations:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
              - deleteGenreBookRelationsInTable

          # Genre
          putGenre:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
              - putGenreInTable
          deleteGenres:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
              - deleteGenreInTable

  BookManagementTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: BookManagementTable
      KeySchema:
        - AttributeName: PK
          KeyType: HASH # Clave de partición
        - AttributeName: SK
          KeyType: RANGE # Clave de ordenación
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S # Tipo de atributo: String
        - AttributeName: SK
          AttributeType: S # Tipo de atributo: String
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: InverseIndex
          KeySchema:
            - AttributeName: SK
              KeyType: HASH
            - AttributeName: PK
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

Parameters:
  APIName:
    Type: String
    Default: bm-epac-api

Outputs:
  BMGraphQLAPI:
    Description: AppSync API
    Value: !GetAtt BMGraphQLAPI.GraphQLUrl
  BMGraphQLAPIBMApiKey:
    Description: AppSync API Key
    Value: !GetAtt BMGraphQLAPIBMApiKey.ApiKey
  UserPoolId:
    Description: User Pool ID
    Value: !Ref BMUserPool
  UserPoolClientId:
    Description: User Pool Client ID
    Value: !Ref BMUserPoolClient
  Region:
    Description: AWS Region
    Value: !Ref AWS::Region
  AccountId:
    Description: AWS Account ID
    Value: !Ref AWS::AccountId